run:
  concurrency: 4
  timeout: 2m
  issues-exit-code: 1
  tests: true
output:

  format: colored-line-number

  # Print lines of code with issue.
  # Default: true
  #  print-issued-lines: false
  print-issued-lines: true

  print-linter-name: true

  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true
#  uniq-by-line: false

linters:
  # Disable all linters. (It doesn't disable linters listed below, only default ones)
  # Default: false
  disable-all: true
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused

    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - cyclop
    - decorder
    - dogsled
    - dupword
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - grouper
    - importas
    - interfacebloat
    - ireturn
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nosprintfhostport
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagalign
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wsl

linters-settings:
  wrapcheck:
    # An array of strings that specify substrings of signatures to ignore.
    # If this set, it will override the default set of ignored signatures.
    # See https://github.com/tomarrell/wrapcheck#configuration for more information.
    ignoreSigs:
      - .WrapError(

  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5
    max-distance: 6
    ignore-names:
      - l
      - cfg
      - db
      - wg
      - r
  lll:
    # Max line length, lines longer will be reported.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option.
    # Default: 120.
    line-length: 180

  staticcheck:
  # Select the Go version to target.
  # Default: 1.13
  #    go: "1.15"
  # https://staticcheck.io/docs/options#checks
  #    checks: ["all",
  #             "-ST1000", #  Incorrect or missing package comment
  #             "-ST1003", # should not use MixedCaps in package name
  #    ]

  stylecheck:
    #    # Select the Go version to target.
    #    # Default: 1.13
    #    go: "1.15"
    #    # https://staticcheck.io/docs/options#checks
    checks: ["all",
             "-ST1000", # Incorrect or missing package comment
             "-ST1003", # Should not use MixedCaps in package name
    ]

  gomnd:
    # List of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    # List of numbers to exclude from analysis.
    # The numbers should be written as string.
    # Values always ignored: "1", "1.0", "0" and "0.0"
    #    ignored-numbers:
    #      - '0666'

    # List of file patterns to exclude from analysis.
    # Values always ignored: `.+_test.go`
    #    ignored-files:
    #      - 'magic1_.*.go'
    # List of function patterns to exclude from analysis.
    # Values always ignored: `time.Time`
    ignored-functions:
      - 'context.*'

  revive:
    rules:
      - name: var-naming
        severity: warning
        disabled: true

issues:
  exclude-rules:
    - path: pkg
      linters:
        - unused

  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option.
  # To list all excluded by default patterns execute `golangci-lint run --help`.
  # Default: true.
  exclude-use-default: false
  # If set to true exclude and exclude-rules regular expressions become case-sensitive.
  # Default: false
  exclude-case-sensitive: false

  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0

  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing large codebase.
  # It's not practical to fix all existing issues at the moment of integration:
  # much better don't allow issues in new code.
  #
  # Default: false.
  new: false

  # Fix found issues (if it's supported by the linter).
  fix: false